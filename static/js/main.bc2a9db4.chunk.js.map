{"version":3,"sources":["logo.svg","serviceWorker.js","NavBar.jsx","Account.jsx","Withdraw.jsx","SplitFunds.jsx","SplitBalance.jsx","SplitterApp.jsx","App.jsx","index.jsx"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","NavBar","react_default","a","createElement","className","src","logo","width","height","alt","this","props","isPaused","href","concat","address","rel","target","PureComponent","Account","state","txStackId","txStatus","toastOptions","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","handleOnClick","event","_this","unpause","cacheSend","pause","setState","prevProps","getTxStatus","message","toast","warning","success","error","buttonClass","isPauser","actionLabel","account","balanceAccount","balanceSplitter","type","onClick","Component","Withdraw","withdraw","balance","SplitFunds","amount","isAddress","first","second","split","value","toWei","handleOnChange","Object","defineProperty","name","id","key","min","step","max","onChange","placeholder","aria-label","aria-describedby","required","SplitBalance","SplitterApp","isTrackingEvents","contractDidChange","k_isPauser","k_balances","k_paused","firstRecipient","secondRecipient","f_isPauser","dataKey","drizzle","contracts","Splitter","methods","cacheCall","f_balances","balances","f_paused","paused","handleOnEventEmitted","console","log","_this$props$drizzleSt","drizzleState","transactions","txHash","transactionStack","status","fromWeiToEther","wei","undefined","toString","web3","utils","fromWei","_this2","accounts","events","options","unsubscribe","store","subscribe","drizzleStatus","initialized","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","eventName","on","err","return","accountBalance","accountBalances","results","r_isPauser","r_balances","r_paused","Fragment","src_NavBar","accountIsPauser","accountBalanceOnSplitter","splitterIsPaused","noBalance","noBalanceOnSplitter","noBalanceAtAll","react_toastify","src_Account","src_Withdraw","maxLength","src_SplitFunds","src_SplitBalance","splitBalance","App","drizzle_react","Consumer","drizzleContext","src_SplitterApp","block","fallback","url","polls","drizzleStore","generateStore","Drizzle","ReactDOM","render","Provider","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bc2a9db4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport logo from \"./logo.svg\";\n\nclass NavBar extends PureComponent {\n  render() {\n    return (\n      <nav className=\"navbar sticky-top navbar-dark text-white bg-dark\">\n        <img\n          className=\"navbar-brand d-inline-block align-middle\"\n          src={logo}\n          width=\"64px\"\n          height=\"64px\"\n          alt=\"splitter-logo\"\n        />\n        <h4 className=\"nav-text\">\n          {this.props.isPaused && (\n            <span className=\"badge badge-danger\">{\" PAUSED \"}</span>\n          )}\n        </h4>\n        <h2 className=\"nav-text\">\n          <strong>BLOCKSTARS Splitter</strong>\n        </h2>\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <a\n              href={`https://etherscan.io/address/${this.props.address}`}\n              className=\"nav-link\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              {this.props.address}\n            </a>\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default NavBar;\n","import React, { Component } from \"react\";\nimport { toast } from \"react-toastify\";\n\nclass Account extends Component {\n  state = { txStackId: null, txStatus: null };\n\n  toastOptions = {\n    position: \"top-right\",\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true\n  };\n\n  handleOnClick = event => {\n    const txStackId = this.props.isPaused\n      ? this.props.unpause.cacheSend()\n      : this.props.pause.cacheSend();\n    this.setState({ txStackId, txStatus: null });\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.isPaused !== prevProps.isPaused) {\n      this.setState({ txStackId: null, txStatus: null });\n    } else {\n      const txStatus = this.props.getTxStatus(this.state.txStackId);\n      if (txStatus !== this.state.txStatus) {\n        this.setState({ txStatus });\n        const message = this.props.isPaused\n          ? `UNPAUSE: ${txStatus}`\n          : `PAUSE: ${txStatus}`;\n        if (txStatus === \"pending\") {\n          toast.warning(message, this.toastOptions);\n        } else if (txStatus === \"success\") {\n          toast.success(message, this.toastOptions);\n        } else {\n          toast.error(message, this.toastOptions);\n        }\n      }\n    }\n  }\n\n  render() {\n    const buttonClass = this.props.isPauser\n      ? this.props.isPaused\n        ? \"btn btn-success btn-block\"\n        : \"btn btn-danger btn-block\"\n      : \"btn btn-light btn-block\";\n    const actionLabel = this.props.isPaused ? \"UNPAUSE\" : \"PAUSE\";\n\n    return (\n      <div className=\"card shadow text-white bg-primary\">\n        <h5 className=\"card-header\">ACCOUNT {this.props.account}</h5>\n        <div className=\"card-body\">\n          <table className=\"table table-borderless table-hover text-white bg-primary\">\n            <tbody>\n              <tr>\n                <td>Balance on Blockchain</td>\n                <td>Ξ {this.props.balanceAccount}</td>\n              </tr>\n              <tr>\n                <td>Balance on Splitter</td>\n                <td>Ξ {this.props.balanceSplitter}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        {this.props.isPauser && (\n          <div className=\"card-footer\">\n            <button\n              type=\"button\"\n              className={buttonClass}\n              onClick={this.handleOnClick}\n            >\n              <strong>{actionLabel} SPLITTER</strong>\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Account;\n","import React, { Component } from \"react\";\nimport { toast } from \"react-toastify\";\n\nclass Withdraw extends Component {\n  state = { txStackId: null, txStatus: null };\n\n  toastOptions = {\n    position: \"top-right\",\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true\n  };\n\n  handleOnClick = event => {\n    const txStackId = this.props.withdraw.cacheSend();\n    this.setState({ txStackId, txStatus: null });\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.isPaused !== prevProps.isPaused) {\n      this.setState({ txStackId: null, txStatus: null });\n    } else {\n      const txStatus = this.props.getTxStatus(this.state.txStackId);\n      if (txStatus !== this.state.txStatus) {\n        this.setState({ txStatus });\n        const message = `WITHDRAW: ${txStatus}`;\n        if (txStatus === \"pending\") {\n          toast.warning(message, this.toastOptions);\n        } else if (txStatus === \"success\") {\n          toast.success(message, this.toastOptions);\n        } else {\n          toast.error(message, this.toastOptions);\n        }\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"card shadow bg-dark text-center text-white\">\n        <div className=\"card-header\">\n          <button\n            type=\"button\"\n            className=\"btn btn-success btn-block\"\n            onClick={this.handleOnClick}\n          >\n            WITHDRAW BALANCE\n          </button>\n        </div>\n        <span className=\"card-body\">\n          <p>\n            Transfer, to current account on the blockchain, a balance of{\" \"}\n            <code>Ξ {this.props.balance}</code>, which was received from other\n            accounts during <strong>split</strong> transactions.\n          </p>\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default Withdraw;\n","import React, { Component } from \"react\";\nimport { toast } from \"react-toastify\";\n\nclass SplitFunds extends Component {\n  state = { txStackId: null, txStatus: null, amount: \"\" };\n\n  toastOptions = {\n    position: \"top-right\",\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true\n  };\n\n  handleOnClick = event => {\n    if (this.state.amount === \"\" || this.state.amount === \"0\") {\n      toast.error(\"ERROR: amount cannot be empty or zero!\", this.toastOptions);\n    } else if (!this.props.isAddress(this.props.first)) {\n      toast.error(\n        \"ERROR: 1st recipient address is invalid!\",\n        this.toastOptions\n      );\n    } else if (!this.props.isAddress(this.props.second)) {\n      toast.error(\n        \"ERROR: 2nd recipient address is invalid!\",\n        this.toastOptions\n      );\n    } else {\n      const txStackId = this.props.split.cacheSend(\n        this.props.first,\n        this.props.second,\n        {\n          value: this.props.toWei(this.state.amount, \"ether\")\n        }\n      );\n      this.setState({ txStackId, txStatus: null, amount: \"\" });\n    }\n  };\n\n  handleOnChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.isPaused !== prevProps.isPaused) {\n      this.setState({ txStackId: null, txStatus: null });\n    } else {\n      const txStatus = this.props.getTxStatus(this.state.txStackId);\n      if (txStatus !== this.state.txStatus) {\n        this.setState({ txStatus });\n        const message = `SPLIT FUNDS: ${txStatus}`;\n        if (txStatus === \"pending\") {\n          toast.warning(message, this.toastOptions);\n        } else if (txStatus === \"success\") {\n          toast.success(message, this.toastOptions);\n        } else {\n          toast.error(message, this.toastOptions);\n        }\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"card shadow bg-dark text-center text-white\">\n        <div className=\"card-header\">\n          <button\n            type=\"button\"\n            className=\"btn btn-danger btn-block\"\n            onClick={this.handleOnClick}\n          >\n            SPLIT FUNDS\n          </button>\n        </div>\n        <span className=\"card-body\">\n          <p>\n            Transfer, to Splitter, the amount entered below and divide it\n            between the recipient accounts entered above. Recipient accounts can\n            withdraw their funds later on.\n          </p>\n          <p>\n            In case of an uneven amount, exceeding <code>1 wei</code> will be\n            given to 1st recipient account (it would be expensive to refund it\n            or set as balance on Splitter for current account).\n          </p>\n          <p>\n            Current account must have enough balance on blockchain to cover the\n            splitted amount, plus the cost of executing this transaction (gas).\n            Otherwise, it will be reverted.\n          </p>\n        </span>\n        <div className=\"card-footer\">\n          <div className=\"input-group\">\n            <div className=\"input-group-prepend\">\n              <span className=\"input-group-text\" id=\"labelAmount\">\n                Ξ\n              </span>\n            </div>\n            <input\n              type=\"number\"\n              key=\"amount\"\n              name=\"amount\"\n              value={this.state.amount}\n              min=\"0\"\n              step=\"0.01\"\n              max={this.props.balance}\n              onChange={this.handleOnChange}\n              className=\"form-control\"\n              placeholder=\"Amount, in ether, to be splitted between recipients\"\n              aria-label=\"amount\"\n              aria-describedby=\"labelAmount\"\n              required\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SplitFunds;\n","import React, { Component } from \"react\";\nimport { toast } from \"react-toastify\";\n\nclass SplitBalance extends Component {\n  state = { txStackId: null, txStatus: null };\n\n  toastOptions = {\n    position: \"top-right\",\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true\n  };\n\n  handleOnClick = event => {\n    if (!this.props.isAddress(this.props.first)) {\n      toast.error(\n        \"ERROR: 1st recipient address is invalid!\",\n        this.toastOptions\n      );\n    } else if (!this.props.isAddress(this.props.second)) {\n      toast.error(\n        \"ERROR: 2nd recipient address is invalid!\",\n        this.toastOptions\n      );\n    } else {\n      const txStackId = this.props.split.cacheSend(\n        this.props.first,\n        this.props.second\n      );\n      this.setState({ txStackId, txStatus: null });\n    }\n  };\n\n  handleOnChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.isPaused !== prevProps.isPaused) {\n      this.setState({ txStackId: null, txStatus: null });\n    } else {\n      const txStatus = this.props.getTxStatus(this.state.txStackId);\n      if (txStatus !== this.state.txStatus) {\n        this.setState({ txStatus });\n        const message = `SPLIT BALANCE: ${txStatus}`;\n        if (txStatus === \"pending\") {\n          toast.warning(message, this.toastOptions);\n        } else if (txStatus === \"success\") {\n          toast.success(message, this.toastOptions);\n        } else {\n          toast.error(message, this.toastOptions);\n        }\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"card shadow bg-dark text-center text-white\">\n        <div className=\"card-header\">\n          <button\n            type=\"button\"\n            className=\"btn btn-danger btn-block\"\n            onClick={this.handleOnClick}\n          >\n            SPLIT BALANCE\n          </button>\n        </div>\n        <span className=\"card-body\">\n          <p>\n            Split current account's Splitter balance between recipient accounts\n            entered above. Recipient accounts can withdraw their funds later on.\n          </p>\n          <p>\n            In case of an uneven amount, exceeding <code>1 wei</code> will\n            remain on current account balance.\n          </p>\n          <p>\n            Current account must have enough balance on blockchain to cover the\n            cost of executing this transaction (gas). Otherwise, it will be\n            reverted.\n          </p>\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default SplitBalance;\n","import React, { Component } from \"react\";\n\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport NavBar from \"./NavBar\";\nimport AccountInfo from \"./Account\";\nimport Withdraw from \"./Withdraw\";\nimport SplitFunds from \"./SplitFunds\";\nimport SplitBalance from \"./SplitBalance\";\n\nclass SplitterApp extends Component {\n  state = {\n    isTrackingEvents: false,\n    contractDidChange: false,\n    k_isPauser: null,\n    k_balances: null,\n    k_paused: null,\n    firstRecipient: \"\",\n    secondRecipient: \"\"\n  };\n\n  f_isPauser = account => {\n    const { methods } = this.props.drizzle.contracts.Splitter;\n    const dataKey = methods.isPauser.cacheCall(account);\n    this.setState({ k_isPauser: dataKey });\n  };\n\n  f_balances = account => {\n    const { methods } = this.props.drizzle.contracts.Splitter;\n    const dataKey = methods.balances.cacheCall(account);\n    this.setState({ k_balances: dataKey });\n  };\n\n  f_paused = () => {\n    const { methods } = this.props.drizzle.contracts.Splitter;\n    const dataKey = methods.paused.cacheCall();\n    this.setState({ k_paused: dataKey });\n  };\n\n  handleOnChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleOnEventEmitted = event => {\n    console.log(event);\n  };\n\n  getTxStatus = txStackId => {\n    if (txStackId === null) return null;\n    const { transactions, transactionStack } = this.props.drizzleState;\n    const txHash = transactionStack[txStackId];\n    if (!txHash || !transactions[txHash]) return null;\n    return transactions[txHash].status;\n  };\n\n  fromWeiToEther = amount => {\n    const wei =\n      amount === null || amount === undefined\n        ? \"0\"\n        : typeof amount === \"number\" || typeof amount === \"object\"\n        ? amount.toString()\n        : amount;\n    return this.props.drizzle.web3.utils.fromWei(wei, \"ether\");\n  };\n\n  componentDidMount() {\n    const account = this.props.drizzleState.accounts[0];\n    const { events } = this.props.drizzle.contracts.Splitter;\n    const { Splitter } = this.props.drizzle.options.events;\n    this.unsubscribe = this.props.drizzle.store.subscribe(() => {\n      if (this.props.drizzleState.drizzleStatus.initialized) {\n        if (!this.state.isTrackingEvents) {\n          for (const eventName of Splitter) {\n            events[eventName]().on(\"data\", event => {\n              this.handleOnEventEmitted(event);\n            });\n          }\n        }\n        this.setState({ isTrackingEvents: true });\n      }\n    });\n    this.f_isPauser(account);\n    this.f_balances(account);\n    this.f_paused();\n  }\n\n  componentDidUpdate(prevProps) {\n    const account = this.props.drizzleState.accounts[0];\n    const contractDidChange = this.state.contractDidChange;\n    if (account !== prevProps.drizzleState.accounts[0]) {\n      this.f_isPauser(account);\n      this.f_balances(account);\n    }\n    if (contractDidChange === true) {\n      this.f_paused();\n      this.setState({ contractDidChange: false });\n    }\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  render() {\n    const { address } = this.props.drizzle.contracts.Splitter;\n\n    const account = this.props.drizzleState.accounts[0];\n    const accountBalance = this.props.drizzleState.accountBalances[account];\n\n    const { methods } = this.props.drizzle.contracts.Splitter;\n    const results = this.props.drizzleState.contracts.Splitter;\n\n    const r_isPauser = results.isPauser[this.state.k_isPauser];\n    const r_balances = results.balances[this.state.k_balances];\n    const r_paused = results.paused[this.state.k_paused];\n\n    if (\n      r_isPauser === null ||\n      r_isPauser === undefined ||\n      r_balances === null ||\n      r_balances === undefined ||\n      r_paused === null ||\n      r_paused === undefined\n    ) {\n      return (\n        <React.Fragment>\n          <NavBar\n            address={\"0x0000000000000000000000000000000000000000\"}\n            isPaused={false}\n          />\n        </React.Fragment>\n      );\n    }\n\n    const accountIsPauser = r_isPauser.value;\n    const accountBalanceOnSplitter = r_balances.value;\n    const splitterIsPaused = r_paused.value;\n\n    const noBalance = accountBalance === \"0\";\n    const noBalanceOnSplitter = accountBalanceOnSplitter === \"0\";\n    const noBalanceAtAll = noBalance && noBalanceOnSplitter;\n\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <NavBar address={address} isPaused={splitterIsPaused} />\n        <div className=\"container\">\n          <div className=\"row justify-content-md-center mt-3\">\n            <div className=\"col-8\">\n              <AccountInfo\n                pause={methods.pause}\n                unpause={methods.unpause}\n                account={account}\n                balanceAccount={this.fromWeiToEther(accountBalance)}\n                balanceSplitter={this.fromWeiToEther(accountBalanceOnSplitter)}\n                isPauser={accountIsPauser}\n                isPaused={splitterIsPaused}\n                getTxStatus={this.getTxStatus}\n              />\n            </div>\n          </div>\n\n          {!splitterIsPaused && !noBalanceOnSplitter && (\n            <div className=\"row justify-content-md-center mt-3\">\n              <div className=\"col-8\">\n                <Withdraw\n                  balance={this.fromWeiToEther(accountBalanceOnSplitter)}\n                  withdraw={methods.withdraw}\n                  isPaused={splitterIsPaused}\n                  getTxStatus={this.getTxStatus}\n                />\n              </div>\n            </div>\n          )}\n\n          {!splitterIsPaused && !noBalanceAtAll && (\n            <div className=\"row justify-content-md-center mt-3\">\n              <div className=\"col-8 bg-danger\">\n                <div className=\"input-group mt-3 mb-1\">\n                  <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\" id=\"labelFirst\">\n                      #1\n                    </span>\n                  </div>\n                  <input\n                    type=\"text\"\n                    key=\"firstRecipient\"\n                    name=\"firstRecipient\"\n                    value={this.state.firstRecipient}\n                    onChange={this.handleOnChange}\n                    className=\"form-control\"\n                    placeholder=\"Address of 1st Recipient Account, with 0x prefix\"\n                    aria-label=\"firstRecipient\"\n                    aria-describedby=\"labelFirst\"\n                    maxLength=\"42\"\n                    required\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n\n          {!splitterIsPaused && !noBalanceAtAll && (\n            <div className=\"row justify-content-md-center\">\n              <div className=\"col-8 bg-danger\">\n                <div className=\"input-group mt-1 mb-3\">\n                  <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\" id=\"labelSecond\">\n                      #2\n                    </span>\n                  </div>\n                  <input\n                    type=\"text\"\n                    key=\"secondRecipient\"\n                    name=\"secondRecipient\"\n                    value={this.state.secondRecipient}\n                    onChange={this.handleOnChange}\n                    className=\"form-control\"\n                    placeholder=\"Address of 2nd Recipient Account, with 0x prefix\"\n                    aria-label=\"secondRecipient\"\n                    aria-describedby=\"labelSecond\"\n                    maxLength=\"42\"\n                    required\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n\n          <div className=\"row justify-content-md-center mt-3\">\n            {!splitterIsPaused && !noBalance && (\n              <div className=\"col-6\">\n                <SplitFunds\n                  split={methods.split}\n                  getTxStatus={this.getTxStatus}\n                  toWei={this.props.drizzle.web3.utils.toWei}\n                  isAddress={this.props.drizzle.web3.utils.isAddress}\n                  isPaused={splitterIsPaused}\n                  balance={this.fromWeiToEther(accountBalance)}\n                  first={this.state.firstRecipient}\n                  second={this.state.secondRecipient}\n                />\n              </div>\n            )}\n\n            {!splitterIsPaused && !noBalanceOnSplitter && (\n              <div className=\"col-6\">\n                <SplitBalance\n                  split={methods.splitBalance}\n                  getTxStatus={this.getTxStatus}\n                  isAddress={this.props.drizzle.web3.utils.isAddress}\n                  isPaused={splitterIsPaused}\n                  first={this.state.firstRecipient}\n                  second={this.state.secondRecipient}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SplitterApp;\n","import React from \"react\";\nimport { DrizzleContext } from \"drizzle-react\";\nimport SplitterApp from \"./SplitterApp\";\n\nexport const App = () => (\n  <DrizzleContext.Consumer>\n    {drizzleContext => {\n      const { drizzle, drizzleState, initialized } = drizzleContext;\n\n      if (!initialized) {\n        return \"Loading... is MetaMask 🦊 enabled and set on correct network?\";\n      }\n\n      return <SplitterApp drizzle={drizzle} drizzleState={drizzleState} />;\n    }}\n  </DrizzleContext.Consumer>\n);\n\nexport default App;\n","import \"bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport App from \"./App\";\n\nimport { Drizzle, generateStore } from \"drizzle\";\nimport { DrizzleContext } from \"drizzle-react\";\nimport Splitter from \"./contracts/Splitter.json\";\n\nconst options = {\n  web3: {\n    block: false,\n    fallback: {\n      type: \"ws\",\n      url: \"ws://127.0.0.1:9545\" // Truffle Develop\n    }\n  },\n  contracts: [Splitter],\n  events: {\n    Splitter: [\n      \"FundsSplitted\",\n      \"BalanceSplitted\",\n      \"BalanceWithdrew\",\n      // inherited from Pausable\n      \"Paused\",\n      \"Unpaused\",\n      // inherited from PauserRole\n      \"PauserAdded\",\n      \"PauserRemoved\"\n    ]\n  },\n  polls: {\n    accounts: 1500\n  }\n};\n\nconst drizzleStore = generateStore(options);\nconst drizzle = new Drizzle(options, drizzleStore);\n\nReactDOM.render(\n  <DrizzleContext.Provider drizzle={drizzle}>\n    <App />\n  </DrizzleContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}